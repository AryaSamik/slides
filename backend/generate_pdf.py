from fpdf import FPDF
from utils import format_timestamp
from datetime import datetime
import os

def generate_slide_pdf(summaries, images, video_id, youtube_url, video_title, thumbnail_path):
    pdf = FPDF()

    pdf.set_auto_page_break(auto=True, margin=15)

    # ðŸ”¥ Cover slide
    pdf.add_page()

    # Add thumbnail image
    if thumbnail_path and os.path.exists(thumbnail_path):
        pdf.image(thumbnail_path, x=30, y=20, w=150)
        pdf.ln(90)  # space after image
    else:
        pdf.set_font("Arial", 'B', 20)
        pdf.cell(200, 20, txt="Slide Deck", ln=True, align='C')

    pdf.set_font("Arial", '', 14)
    pdf.ln(10)
    pdf.multi_cell(0, 10, txt=f"Title: {video_title}")
    pdf.ln(2)
    pdf.multi_cell(0, 10, txt=f"YouTube URL: {youtube_url}")
    pdf.ln(2)
    pdf.multi_cell(0, 10, txt=f"Generated On: {datetime.now().strftime('%d %b %Y, %H:%M')}")
    pdf.ln(2)
    pdf.set_text_color(100, 100, 100)
    pdf.multi_cell(0, 10, txt="Generated by Slide Generator")

    pdf.set_text_color(0, 0, 0)  # Reset text color

    for i, point in enumerate(summaries):
        pdf.add_page()
        pdf.set_font("Arial", size=16)

        #Slide title
        pdf.cell(200, 10, txt=f"Slide {i+1}", ln=True)

        #Add timestamp
        timestamp_str = format_timestamp(point['timestamp'])
        pdf.set_font("Arial", size=12)
        pdf.cell(200, 10, txt=f"Timestamp: {timestamp_str}", ln=True)

        #Slide text
        pdf.set_font("Arial", size=14)
        pdf.multi_cell(0, 10, txt=point['text'])

        #Image
        if i < len(images):
            pdf.image(images[i], x=10, y=120, w=180)

    output_path = f"output/{video_id}.pdf"
    pdf.output(output_path)
    return f"{video_id}.pdf"
